apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
  name: argocd-dex-server
  namespace: argocd
  labels:
    helm.sh/chart: argo-cd-5.43.4
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.8.0
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/instance: argocd
  template:
    metadata:
      annotations:
        checksum/cmd-params: 7ae7ec28d9ca09900362f71b16b95c473e3817f456512f00f6d67273d51f4425
        cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
      labels:
        helm.sh/chart: argo-cd-5.43.4
        app.kubernetes.io/name: argocd-dex-server
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/component: dex-server
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v2.8.0
    spec:
      serviceAccountName: argocd-dex-server
      containers:
        - name: dex-server
          image: ghcr.io/dexidp/dex:v2.37.0
          imagePullPolicy: IfNotPresent
          command:
            - /shared/argocd-dex
            - '--logformat=json'
            - '--loglevel=warn'
          args:
            - rundex
          env:
            - name: ARGOCD_DEX_SERVER_DISABLE_TLS
              valueFrom:
                configMapKeyRef:
                  name: argocd-cmd-params-cm
                  key: dexserver.disable.tls
                  optional: true
          ports:
            - name: http
              containerPort: 5556
              protocol: TCP
            - name: grpc
              containerPort: 5557
              protocol: TCP
            - name: metrics
              containerPort: 5558
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: static-files
              mountPath: /shared
            - name: dexconfig
              mountPath: /tmp
            - name: argocd-dex-server-tls
              mountPath: /tls
      initContainers:
        - name: copyutil
          image: quay.io/argoproj/argocd:v2.8.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/cp
            - '-n'
            - /usr/local/bin/argocd
            - /shared/argocd-dex
          volumeMounts:
            - mountPath: /shared
              name: static-files
            - mountPath: /tmp
              name: dexconfig
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-dex-server
                topologyKey: kubernetes.io/hostname
      volumes:
        - name: static-files
          emptyDir: {}
        - name: dexconfig
          emptyDir: {}
        - name: argocd-dex-server-tls
          secret:
            secretName: argocd-dex-server-tls
            optional: true
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      dnsPolicy: ClusterFirst
